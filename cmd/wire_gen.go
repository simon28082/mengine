// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/simon/mengine/infrastructure/engine"
	"github.com/simon/mengine/infrastructure/logger/wrap"
	"github.com/simon/mengine/infrastructure/logger/zap"
)

// Injectors from main.go:

func InitLogger() (*wrap.LoggerWrap, error) {
	zapZap, err := zap.NewZapDevelopment()
	if err != nil {
		return nil, err
	}
	loggerWrap := wrap.NewLogger(zapZap)
	return loggerWrap, nil
}

func InitEngine(ctx context.Context) engine.Engine {
	container := engine.NewContainer()
	cmd := engine.NewCmd()
	process := engine.NewProcess(ctx, cmd)
	engineEngine := engine.NewEngine(ctx, container, process)
	return engineEngine
}

// main.go:

func main() {

	ctx := context.Background()
	InitEngine(ctx)

}
